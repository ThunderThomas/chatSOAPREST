
package service.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserSOAPImpl", targetNamespace = "http://ws.service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserSOAPImpl {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ApplicationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://ws.service/", className = "service.ws.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://ws.service/", className = "service.ws.AddUserResponse")
    @Action(input = "http://ws.service/UserSOAPImpl/addUserRequest", output = "http://ws.service/UserSOAPImpl/addUserResponse", fault = {
        @FaultAction(className = ApplicationException_Exception.class, value = "http://ws.service/UserSOAPImpl/addUser/Fault/ApplicationException")
    })
    public boolean addUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2)
        throws ApplicationException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ApplicationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://ws.service/", className = "service.ws.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://ws.service/", className = "service.ws.EditUserResponse")
    @Action(input = "http://ws.service/UserSOAPImpl/editUserRequest", output = "http://ws.service/UserSOAPImpl/editUserResponse", fault = {
        @FaultAction(className = ApplicationException_Exception.class, value = "http://ws.service/UserSOAPImpl/editUser/Fault/ApplicationException")
    })
    public boolean editUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2)
        throws ApplicationException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws ApplicationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://ws.service/", className = "service.ws.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://ws.service/", className = "service.ws.DeleteUserResponse")
    @Action(input = "http://ws.service/UserSOAPImpl/deleteUserRequest", output = "http://ws.service/UserSOAPImpl/deleteUserResponse", fault = {
        @FaultAction(className = ApplicationException_Exception.class, value = "http://ws.service/UserSOAPImpl/deleteUser/Fault/ApplicationException")
    })
    public boolean deleteUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws ApplicationException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns service.ws.User
     * @throws ApplicationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://ws.service/", className = "service.ws.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://ws.service/", className = "service.ws.GetUserResponse")
    @Action(input = "http://ws.service/UserSOAPImpl/getUserRequest", output = "http://ws.service/UserSOAPImpl/getUserResponse", fault = {
        @FaultAction(className = ApplicationException_Exception.class, value = "http://ws.service/UserSOAPImpl/getUser/Fault/ApplicationException")
    })
    public User getUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws ApplicationException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<service.ws.User>
     * @throws ApplicationException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAll", targetNamespace = "http://ws.service/", className = "service.ws.GetAll")
    @ResponseWrapper(localName = "getAllResponse", targetNamespace = "http://ws.service/", className = "service.ws.GetAllResponse")
    @Action(input = "http://ws.service/UserSOAPImpl/getAllRequest", output = "http://ws.service/UserSOAPImpl/getAllResponse", fault = {
        @FaultAction(className = ApplicationException_Exception.class, value = "http://ws.service/UserSOAPImpl/getAll/Fault/ApplicationException")
    })
    public List<User> getAll()
        throws ApplicationException_Exception
    ;

}
